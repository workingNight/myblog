{"version":3,"sources":["api/ajax.js","api/index.js","Pages/Login.js","Pages/AddArticle.js","Pages/ArticleList.js","Pages/AdminIndex.js","Pages/Main.js","index.js"],"names":["ajax","url","data","method","Promise","resolve","reject","result","axios","params","post","delete","put","then","response","catch","error","message","console","log","defaults","withCredentials","crossDomain","headers","BASE","reqLogin","username","password","updateArticle","id","delArticleById","getArticleById","Login","props","useState","setUsername","setPassword","isLoading","setIsLoading","useEffect","checkLogin","a","res","status","localStorage","setItem","openId","history","push","setTimeout","getItem","to","className","tip","spinning","title","bordered","style","width","size","placeholder","prefix","SmileOutlined","onChange","e","target","value","Password","type","block","onClick","Option","Select","TextArea","Input","AddArticle","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","viewMD","setViewMD","renderer","marked","Renderer","setOptions","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeContent","htmlContent","changeIntroduce","htmlIntroduce","_getTypeInfo","initData","addTime","typeId","article_content","introduce","html","tmpInt","_getArticleById","saveArticle","dataProps","type_id","toString","indexOf","datetext","replace","Date","getTime","insertId","isSuccess","success","removeItem","isScuccess","tmpId","match","savedArticle","JSON","parse","_initPage","gutter","span","display","flexWrap","defaultValue","map","item","index","key","typeName","marginLeft","marginTop","rows","onPressEnter","dangerouslySetInnerHTML","__html","dataPropsJsoned","stringify","textAlign","textJustify","wordBreak","date","dateString","confirm","Modal","ArticleList","list","setList","getList","columns","dataIndex","render","checked","content","onOk","delSuccess","onCancel","delArticle","dataSource","Header","Layout","Content","Footer","Sider","SubMenu","Menu","AdminIndex","collapsed","setCollapsed","minHeight","collapsible","onCollapse","alt","src","height","theme","defaultSelectedKeys","mode","Item","background","padding","position","right","bottom","margin","path","exact","component","Main","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dfb7231d.chunk.js","sourcesContent":["import { message } from 'antd'\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials=true\r\naxios.defaults.crossDomain=true\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\r\n\r\n//封装axios，集中错误处理\r\n\r\nexport default function ajax(url, data = {}, method = 'GET') {\r\n    return new Promise((resolve, reject) => {\r\n        let result   //接收请求的结果，是一个promise\r\n        if (method === 'GET') {\r\n            result = axios({\r\n                method:'get',\r\n                url,\r\n                params: data,\r\n              })\r\n        } else if (method === 'POST') {\r\n            result = axios.post(url, data)\r\n        } else if (method === 'DELETE') {\r\n            result = axios.delete(url, data)\r\n        } else if (method === 'PUT') {\r\n            result = axios.put(url, data)\r\n        }\r\n        //把result拆开看看结果,   类似于await的作用\r\n        result.then(response => {\r\n            resolve(response.data)\r\n            // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n        }).catch(error => {\r\n            // reject(error)\r\n            message.error('请求出错了: ' + error.message)\r\n            console.log(error.message)\r\n        })\r\n    })\r\n}","import ajax from './ajax'\r\n\r\nconst BASE = 'https://127.0.0.1:9999/admin'\r\n\r\n// 请求二次封装\r\n\r\n//登录\r\nexport const reqLogin = (username, password) => ajax(BASE + '/checkLogin', {username, password}, 'POST')\r\n//获取文章类型\r\nexport const getTypeInfo = () => ajax(BASE+ '/getTypeInfo')\r\n// 添加文章\r\nexport const addArticle = (data) => ajax(BASE + '/addArticle', data, 'POST')\r\n// 根据文章id修改文章\r\nexport const updateArticle = (id,data) => ajax(BASE + '/updateArticle/' + id, data, 'PUT')\r\n// 获取文章列表\r\nexport const getArticleList = () => ajax(BASE + '/getArticleList')\r\n// 删除文章\r\nexport const delArticleById = id => ajax(BASE + '/delArticle/'+ id,{}, 'DELETE')\r\n// 通过id获取文章id\r\nexport const getArticleById = id => ajax(BASE + '/getArticleById/'+id)","import React, { useState,useEffect } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../static/css/Login.css';\r\nimport { Card, Input, Button, Spin ,message } from 'antd';\r\nimport {\r\n    SmileOutlined,\r\n} from '@ant-design/icons';\r\nimport {  Redirect} from 'react-router-dom'\r\n\r\nimport {reqLogin} from '../api'\r\n\r\nfunction Login(props) {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    //isLoading用户控制Spin组件是否进入加载状态，进入加载状态可以有效防止重复提交\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\n    const checkLogin = async () => {\r\n        setIsLoading(true)\r\n\r\n        if (!username) {\r\n            message.error('用户名不能为空')\r\n            return false\r\n        } else if (!password) {\r\n            message.error('密码不能为空')\r\n            return false\r\n        }\r\n        const res = await reqLogin(username, password)\r\n        if(res.status === '1') {\r\n            setIsLoading(false)\r\n            localStorage.setItem('openId', res.openId)\r\n            props.history.push('/index')\r\n        } else {\r\n            message.error('用户名或密码错误')\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1000)\r\n    }\r\n\r\n\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const openId = localStorage.getItem('openId')\r\n    if(openId) {\r\n      return <Redirect to='/index'/>\r\n    }\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={isLoading}>\r\n                <Card title=\"Ripple Blog  System\" bordered={true} style={{ width: 400 }} >\r\n                    <Input\r\n                        id=\"userName\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your userName\"\r\n                        prefix={<SmileOutlined/>}\r\n                        onChange={(e) => { setUsername(e.target.value) }}\r\n                    />\r\n                    <br /><br />\r\n                    <Input.Password\r\n                        id=\"password\"\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your password\"\r\n                        prefix={<SmileOutlined/>}\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    <br /><br />\r\n                    <Button type=\"primary\" size=\"large\" block onClick={checkLogin} > Login in </Button>\r\n                </Card>\r\n            </Spin>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\nimport marked from 'marked'\r\nimport '../static/css/AddArticle.css'\r\nimport { Row, Col, Input, Select, Button, DatePicker, message } from 'antd'\r\nimport { getTypeInfo, getArticleById, updateArticle, addArticle } from '../api'\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input\r\n\r\n//有关markdown的处理思考，文件里应该保存markdown文件。即带‘#’的文件\r\n\r\nfunction AddArticle(props) {\r\n    const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    const [articleTitle, setArticleTitle] = useState('')   //文章标题\r\n    const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\r\n    const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n    const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\r\n    const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\r\n    const [showDate, setShowDate] = useState()   //发布日期\r\n    const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\r\n    const [selectedType, setSelectType] = useState(\"选择文章类别\") //选择的文章类别\r\n\r\n    const [viewMD, setViewMD] = useState(true)\r\n\r\n    //marked options\r\n    const renderer = new marked.Renderer()\r\n    marked.setOptions({\r\n        renderer,\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n    });\r\n\r\n    const changeContent = (e) => {\r\n        setArticleContent(e.target.value)\r\n        let htmlContent = marked(e.target.value)\r\n        setMarkdownContent(htmlContent)\r\n    }\r\n\r\n    const changeIntroduce = (e) => {\r\n        setIntroducemd(e.target.value)\r\n        let htmlIntroduce = marked(e.target.value)\r\n        setIntroducehtml(htmlIntroduce)\r\n    }\r\n\r\n    //从中台得到文章类别信息\r\n    const _getTypeInfo = async () => {\r\n        const res = await getTypeInfo()\r\n        if (res) {\r\n            setTypeInfo(res.data)\r\n        }\r\n    }\r\n    //选择类别后的的操作\r\n    const selectTypeHandler = (value) => {\r\n        setSelectType(value)\r\n    }\r\n\r\n    const initData = (data) => {\r\n        let { title = \"\", addTime = showDate, typeId = selectedType, article_content = \"\", introduce = \"\" } = data\r\n        setArticleTitle(title)\r\n        setShowDate(addTime)\r\n        setSelectType(typeId)\r\n        //有关md\r\n        setArticleContent(article_content)\r\n        setIntroducemd(introduce)\r\n        let html = marked(article_content)\r\n        setMarkdownContent(html)\r\n        let tmpInt = marked(introduce)\r\n        setIntroducehtml(tmpInt)\r\n    }\r\n\r\n    const _getArticleById = async (id) => {\r\n        const res = await getArticleById(id)\r\n        if (res.status === '1') {\r\n            initData(res.data[0])\r\n        }\r\n    }\r\n    const tempSaveArticle = () => {\r\n        let dataProps = {}  //传递到接口的参数\r\n        dataProps.type_id = selectedType\r\n        dataProps.title = articleTitle\r\n        dataProps.article_content = articleContent\r\n        dataProps.introduce = introducemd\r\n        if (showDate) {\r\n            let datetext = showDate.replace('-', '/') //把字符串转换成时间戳\r\n            dataProps.addTime = (new Date(datetext).getTime()) / 1000\r\n        }\r\n        // 存进localStorage\r\n        let dataPropsJsoned = JSON.stringify(dataProps)\r\n        localStorage.setItem('savedArticle', dataPropsJsoned)\r\n        message.success('暂存成功')\r\n    }\r\n\r\n    const saveArticle = async () => {\r\n        if (!selectedType || selectedType === \"选择文章类别\") {\r\n            message.error('必须选择文章类别')\r\n            return false\r\n        } else if (!articleTitle) {\r\n            message.error('文章名称不能为空')\r\n            return false\r\n        } else if (!articleContent) {\r\n            message.error('文章内容不能为空')\r\n            return false\r\n        } else if (!introducemd) {\r\n            message.error('简介不能为空')\r\n            return false\r\n        } else if (!showDate) {\r\n            // message.success('发布日期已设为当前时间')\r\n            // setShowDate(Date.now())\r\n            message.error('发布时间不能为空')\r\n            return false\r\n        }\r\n\r\n        let dataProps = {}  //传递到接口的参数\r\n        dataProps.type_id = selectedType\r\n        dataProps.title = articleTitle\r\n        dataProps.article_content = articleContent\r\n        dataProps.introduce = introducemd\r\n        //正常处理\r\n        if (showDate.toString().indexOf('-') >= 0) {\r\n            let datetext = showDate.replace('-', '/') //把字符串转换成时间戳\r\n            dataProps.addTime = (new Date(datetext).getTime()) / 1000\r\n        } else {\r\n            dataProps.addTime = showDate\r\n        }\r\n\r\n        console.log(dataProps)\r\n        //调用api\r\n        let res;\r\n        if (articleId === 0) {\r\n            res = await addArticle(dataProps)\r\n            if (res) {\r\n                setArticleId(res.insertId)\r\n                if (res.isSuccess) {\r\n                    message.success('文章添加成功')\r\n                    //清除缓存\r\n                    localStorage.removeItem('savedArticle')\r\n                    initData({})\r\n                    setArticleId(0)       //防止原地调用变成修改\r\n                } else {\r\n                    message.error('文章添加失败');\r\n                }\r\n            }\r\n        } else {  //否之 修改\r\n            res = await updateArticle(articleId, dataProps)\r\n            if (res) {\r\n                if (res.isScuccess) {\r\n                    message.success('文章修改成功')\r\n                    initData({})\r\n                    setArticleId(0)       //防止原地调用变成修改\r\n                } else {\r\n                    message.error('文章修改失败');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function _initPage() {\r\n        //获得文章ID\r\n        let tmpId = props.match.params.id\r\n        let savedArticle = localStorage.getItem('savedArticle')\r\n        if (tmpId) {\r\n            setArticleId(tmpId)\r\n            _getArticleById(tmpId)\r\n        } else if (savedArticle) {\r\n            const data = JSON.parse(savedArticle)\r\n            console.log(data)\r\n            initData(data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        _getTypeInfo()\r\n        _initPage()\r\n    }, [])\r\n\r\n    //数据立即更新\r\n    useEffect(() => {\r\n        setSelectType(selectedType)\r\n        setShowDate(showDate)\r\n    }, [selectedType, showDate])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Row gutter={5}>\r\n                    <Col span={18}>\r\n                        <Row gutter={10} style={{ display: \"flex\", flexWrap: 'nowrap' }}>\r\n                            <Col span={14}>\r\n                                <Input\r\n                                    value={articleTitle}\r\n                                    placeholder=\"博客标题\"\r\n                                    onChange={e => {\r\n                                        setArticleTitle(e.target.value)\r\n                                    }}\r\n                                    size=\"large\" />\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                {/* &nbsp; */}\r\n                                <Select defaultValue={selectedType} size=\"large\" onChange={selectTypeHandler}>\r\n                                    {typeInfo.map((item, index) => {\r\n                                        return (<Option key={index} value={item.id}>{item.typeName}</Option>)\r\n                                    })}\r\n                                </Select>\r\n                            </Col>\r\n                            <Col span={2}>\r\n                                <Button style={{ marginLeft: '6px', marginTop: '4px' }} type=\"primary\" onClick={() => { setViewMD(!viewMD) }}>viewMD</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row gutter={8} >\r\n                            <Col span={viewMD ? 12 : 24}>\r\n                                <TextArea\r\n                                    value={articleContent}\r\n                                    className=\"markdown-content\"\r\n                                    rows={35}\r\n                                    onChange={changeContent}\r\n                                    onPressEnter={changeContent}\r\n                                    placeholder=\"文章内容\"\r\n                                />\r\n\r\n                            </Col>\r\n                            <Col span={viewMD ? 12 : 0}>\r\n                                <div className=\"show-html\"\r\n                                    dangerouslySetInnerHTML={{ __html: markdownContent }} >\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Button size=\"large\" onClick={tempSaveArticle}>暂存文章</Button>&nbsp;\r\n                                <Button type=\"primary\" size=\"large\" onClick={saveArticle}>发布文章</Button>\r\n                                <br />\r\n                                <br />\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <br />\r\n                                <TextArea\r\n                                    rows={6}\r\n                                    value={introducemd}\r\n                                    onChange={changeIntroduce}\r\n                                    onPressEnter={changeIntroduce}\r\n                                    placeholder=\"文章简介\"\r\n                                />\r\n                                <div\r\n                                    style={{\r\n                                        textAlign: \"justify\",\r\n                                        textJustify: \"newspaper\",\r\n                                        wordBreak: \"break-all\"\r\n                                    }}\r\n                                    className=\"introduce-html\"\r\n                                    dangerouslySetInnerHTML={{ __html: introducehtml }} >\r\n                                </div>\r\n                            </Col>\r\n                            <Col span={16}>\r\n                                <div className=\"date-select\">\r\n                                    <DatePicker\r\n                                        onChange={(date, dateString) => setShowDate(dateString)}\r\n                                        placeholder=\"发布日期\"\r\n                                        size=\"large\"\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArticle","import React, { useState, useEffect } from 'react';\r\nimport '../static/css/ArticleList.css'\r\nimport { Modal, message, Button,Table} from 'antd';\r\nimport { getArticleList,delArticleById } from '../api'\r\nconst { confirm } = Modal;\r\n\r\n\r\nfunction ArticleList(props) {\r\n\r\n    const [list, setList] = useState([])\r\n\r\n    //得到文章列表\r\n    const getList = async() => {\r\n        const res = await getArticleList()\r\n        if(res.list) {\r\n            for(let item of res.list) {\r\n                item.key = item.id\r\n            }\r\n            setList(res.list)\r\n        }else {\r\n            message.error('网络错误')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getList()\r\n    }, [])\r\n\r\n    //删除文章的方法\r\n    const delArticle = (id) => {\r\n        confirm({\r\n            title: '确定要删除这篇博客文章吗?',\r\n            content: '如果你点击OK按钮，文章将会永远被删除，无法恢复。',\r\n            async onOk() {\r\n                const res = await delArticleById(id)\r\n                if(res.delSuccess) {\r\n                    message.success('文章删除成功')\r\n                    getList()\r\n                }else {\r\n                    message.error('网络错误')\r\n                }\r\n            },\r\n            onCancel() {\r\n                message.success('已撤销删除')\r\n            },\r\n        });\r\n    }\r\n\r\n    //修改文章\r\n    const updateArticle = (id, checked) => {\r\n        props.history.push('/index/add/' + id)\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: '标题',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n        },\r\n        {\r\n          title: '类别',\r\n          dataIndex: 'typeName',\r\n          key: 'typeName',\r\n        },\r\n        {\r\n          title: '发布时间',\r\n          dataIndex: 'addTime',\r\n          key: 'showTime',\r\n        },\r\n        {\r\n          title: '浏览量',\r\n          dataIndex: 'viewCount',\r\n          key: 'viewCount',\r\n\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'id',\r\n          key: 'action',\r\n          render: (id) => (\r\n            <div>\r\n                <Button type=\"primary\" onClick={() => {updateArticle(id)}}>修改</Button>&nbsp;\r\n                <Button onClick={() => {delArticle(id)}}>删除</Button>\r\n            </div>\r\n          ),\r\n        },\r\n      ];\r\n    return (\r\n        <div>\r\n            <Table dataSource={list} columns={columns}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ArticleList","import React, { useState } from 'react';\r\nimport { Route, Link, Redirect } from \"react-router-dom\";\r\nimport AddArticle from './AddArticle'\r\nimport ArticleList from './ArticleList'\r\nimport { Layout, Menu, Breadcrumb, Button } from 'antd';\r\nimport {\r\n  SmileOutlined,\r\n} from '@ant-design/icons';\r\nimport '../static/css/AdminIndex.css'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction AdminIndex(props) {\r\n  const [collapsed, setCollapsed] = useState(false)\r\n  const onCollapse = collapsed => {\r\n    setCollapsed(collapsed)\r\n  };\r\n\r\n  const handleClickArticle = e => {\r\n    if (e.key === 'addArticle') {\r\n      props.history.push('/index/add')\r\n    } else {\r\n      props.history.push('/index/list')\r\n    }\r\n  }\r\n  \r\n  //退出登录\r\n  function signOut() {\r\n    console.log('退出登录')\r\n    localStorage.removeItem('openId')\r\n    props.history.replace('/login')\r\n  }\r\n\r\n  // 登录检查\r\n  // 如果用户已经登陆, 自动跳转到管理界面\r\n  const openId = localStorage.getItem('openId')\r\n  if(!openId) {\r\n    return <Redirect to='/login'/>\r\n  }\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n        <div className=\"logo\" >\r\n          <img alt=\"blog-logo\" src=\"http://ww1.sinaimg.cn/large/006x4mSygy1gdfn3x3jvcj30et06oglf.jpg\" style={{width:'100%',height:'160%'}}/>\r\n        </div>\r\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\"> \r\n          <Menu.Item key=\"1\">\r\n            <SmileOutlined />\r\n            <Link to=\"/index\">工作台</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <SmileOutlined />\r\n            <Link to=\"/index/list\">文章列表</Link>\r\n          </Menu.Item>\r\n          <SubMenu\r\n            key=\"sub1\"\r\n            onClick={handleClickArticle}\r\n            title={\r\n              <span>\r\n                <SmileOutlined />\r\n                <span>文章管理</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"addArticle\"><Link to=\"/index/add\">添加文章</Link></Menu.Item>\r\n            <Menu.Item key=\"articleList\"><Link to=\"/index/list\">文章列表</Link></Menu.Item>\r\n          </SubMenu>\r\n          <Menu.Item key=\"9\">\r\n            <SmileOutlined />\r\n            <span>留言管理</span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Header style={{ background: '#fff', padding: 0,position:\"relative\"}}>\r\n          <Button onClick={signOut} style={{position:\"absolute\",right:\"30px\",bottom:\"10px\"}}>退出登录</Button>\r\n        </Header>\r\n        <Content style={{ margin: '0 16px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>后台管理</Breadcrumb.Item>\r\n            <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n            <div>\r\n              {/* 这个页面的子路由 */}\r\n              <Route path=\"/index\" exact component={AddArticle} />\r\n              <Route path=\"/index/add\" exact component={AddArticle} />\r\n              <Route path=\"/index/add/:id\" exact component={AddArticle} />\r\n              <Route path=\"/index/list\" component={ArticleList} />\r\n            </div>\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>ripple_blog</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AdminIndex","// setting for router\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Login from './Login'\r\nimport AdminIndex from './AdminIndex'\r\n\r\nfunction Main(){\r\n    return (\r\n        <Router>      \r\n            <Switch>\r\n            <Route path='/login' component={Login} />\r\n            <Route path=\"/\"  component={AdminIndex} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './Pages/Main'\n// function App() {\n//   return (\n//     <div>\n//     <h1>hello react</h1>\n//     </div>\n//   )\n// }\n\nReactDOM.render(<Main />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}